name: Building Package using Conda

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      #max-parallel: 5
      matrix:
        os: [ macos-latest, ubuntu-latest]
        env:
          - CONDA_PY: "38" 
          - CONDA_PY: "39" 
          - CONDA_PY: "310" 

    environment: anaconda_build

    steps:
    - uses: actions/checkout@v2

    - name: Setup miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
          miniconda-version: "latest"
          auto-update-conda: true
          channels: conda-forge, fredboudon
          auto-activate-base: true
          activate-environment: ""
          conda-build-version: "*"
          mamba-version: "*"

    - name: Setup anaconda-client
      shell: cmd /C CALL {0} 
      run: |
        echo "Install anaconda-client"
        conda install -y -q anaconda-client


    - name: Build 
      env:
          CONDA_PY: ${{ matrix.env.CONDA_PY }}
          CONDA_NPY: ${{ matrix.env.CONDA_NPY }}
      run: |
        # Build
        if [[ "$CONDA_PY" = "" ]]; then
          echo "CONDA_PY is not defined"
          exit -1
        fi
        export PYTHON_VERSION=${CONDA_PY:0:1}.${CONDA_PY:1:3}

        sudo conda activate base
        
        export BUILD_CMD="sudo conda build .  --no-test --python=$PYTHON_VERSION "
        export BUILD_OUTPUT=`$BUILD_CMD --output`

        if [[ "$BUILD_OUTPUT" = "" ]]; then
          echo "PACKAGE NAME is not defined"
          exit -1
        fi
        echo "BUILD_OUTPUT=$BUILD_OUTPUT" >> $GITHUB_ENV

        $BUILD_CMD


    - name: Login
      env:
          ANACONDA_LOGIN: ${{ secrets.ANACONDA_LOGIN }}
          ANACONDA_PASSWORD: ${{ secrets.ANACONDA_PASSWORD }}
      run: |
        # Login
        if [[ "$ANACONDA_LOGIN" = "" ]]; then
          echo "ANACONDA_LOGIN is not defined"
          exit -1
        fi

        sudo conda activate base

        SESSION_UID=$(uuidgen)
        anaconda login --username $ANACONDA_LOGIN --password $ANACONDA_PASSWORD --hostname $SESSION_UID

    - name: Deploy
      env:
          ANACONDA_OWNER: ${{ secrets.ANACONDA_OWNER }}
          BUILD_OUTPUT: ${{ env.BUILD_OUTPUT }}
      run: |
        # Deploy
        if [[ "$ANACONDA_OWNER" = "" ]]; then
          echo "ANACONDA_OWNER is not defined"
          exit -1
        fi

        echo "PACKAGE NAME:" $BUILD_OUTPUT
        if [[ "$BUILD_OUTPUT" = "" ]]; then
          echo "PACKAGE NAME is not defined"
          exit -1
        fi

        sudo conda activate base

        anaconda upload --skip-existing $BUILD_OUTPUT -u $ANACONDA_OWNER --no-progress

