name: Building Package using Conda on Windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_CMD_PREFIX: "conda build . --no-test --python="

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      #max-parallel: 5
      matrix:
        os: [ windows-latest]
        env:
          - CONDA_PY: "3.8" 
          - CONDA_PY: "3.9" 
          - CONDA_PY: "3.10" 

    environment: anaconda_build

    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Setup miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
          miniconda-version: "latest"
          auto-update-conda: true
          channels: conda-forge, fredboudon
          auto-activate-base: true
          activate-environment: "base"

    - name: Setup conda build
      shell: cmd /C CALL {0} 
      run: |
        ECHO "Install conda build"
        conda install -y -q conda-build anaconda-client


    - name: Build
      id: build
      env:
          CONDA_PY: ${{ matrix.env.CONDA_PY }}
          BUILD_CMD: "${{ env.BUILD_CMD_PREFIX }}${{ matrix.env.CONDA_PY }}"
      shell: cmd /C CALL {0} 
      run: |
        ECHO "Conda build with CMD"

        IF not defined CONDA_PY (
          ECHO "CONDA_PY is not defined"
          EXIT 1
        )

        ECHO CONDA_PY=%CONDA_PY%

        ECHO BUILD_CMD="%BUILD_CMD%"

        ECHO CWD="%cd%"

        ECHO BUILD
        call %BUILD_CMD%
        if errorlevel 1 exit 1

        ECHO Check output
        FOR /f  %%i IN ('call %BUILD_CMD% --output') DO (
          SET BUILD_OUTPUT=%%i
        )

        IF  not defined BUILD_OUTPUT (
          ECHO "PACKAGE NAME is not defined"
          EXIT 1
        )
        ECHO PACKAGE NAME="%BUILD_OUTPUT%"

        ECHO BUILD_OUTPUT="%BUILD_OUTPUT%" >> $GITHUB_OUTPUT


    - name: Set UUID
      id: generate-uuid
      uses: filipstefansson/uuid-action@v1

    - name: Login
      env:
          ANACONDA_LOGIN: ${{ secrets.ANACONDA_LOGIN }}
          ANACONDA_PASSWORD: ${{ secrets.ANACONDA_PASSWORD }}
          SESSION_UID: ${{ steps.generate-uuid.outputs.uuid }}
      shell: cmd /C CALL {0}
      run: |
        IF not defined ANACONDA_LOGIN (
          echo "ANACONDA_LOGIN is not defined"
          exit -1
        )
        IF not defined SESSION_UID (
          echo "SESSION_UID is not defined"
          exit -1
        )
        ECHO SESSION_UID=%SESSION_UID%

        ECHO LOGIN
        anaconda login --username %ANACONDA_LOGIN% --password %ANACONDA_PASSWORD% --hostname %SESSION_UID%

    - name: Deploy
      env:
          ANACONDA_OWNER: ${{ secrets.ANACONDA_OWNER }}
          BUILD_OUTPUT: ${{ steps.build.outputs.BUILD_OUTPUT }}
      shell: cmd /C CALL {0}
      run: |
        if not defined ANACONDA_OWNER (
          echo "ANACONDA_OWNER is not defined"
          exit 1
        )

        echo "PACKAGE NAME=%BUILD_OUTPUT%"
        if not defined BUILD_OUTPUT (
          echo "PACKAGE NAME is not defined"
          exit 1
        )

        ECHO DEPLOY
        anaconda upload --skip-existing %BUILD_OUTPUT% -u %ANACONDA_OWNER% --no-progress

