name: Building Package using Conda on Windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      #max-parallel: 5
      matrix:
        os: [ windows-latest]
        env:
          #- CONDA_PY: "37"
          #  CONDA_NPY: "111" 
          - CONDA_PY: "38" 
            CONDA_NPY: "116"
          - CONDA_PY: "39" 
            CONDA_NPY: "119"
          - CONDA_PY: "310" 
            CONDA_NPY: "121"

    environment: anaconda_build

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
          miniconda-version: "latest"
          auto-update-conda: false
          channels: conda-forge, fredboudon
          conda-build-version: "*"
          activate-environment: anaconda-client-env


    - name: Build 
      env:
          CONDA_PY: ${{ matrix.env.CONDA_PY }}
          CONDA_NPY: ${{ matrix.env.CONDA_NPY }}
      shell: cmd /C CALL {0}
      run: |
        ECHO "Conda build with CMD"
        IF "%CONDA_PY%" EQU "" (
          ECHO "CONDA_PY is not defined"
          EXIT 1
        )
        IF "%CONDA_NPY%" EQU "" (
          ECHO "CONDA_NPY is not defined"
          EXIT 1
        )
        SET PYTHON_VERSION=%CONDA_PY:~0,1%.%CONDA_PY:~1,1%
        SET NUMPY_VERSION=%CONDA_NPY:~0,1%.%CONDA_NPY:~1,2%

        SET BUILD_CMD=conda build . --python=%PYTHON_VERSION%
        FOR /f %i IN ('%BUILD_CMD% --output') DO SET BUILD_OUTPUT=%i

        IF  "%BUILD_OUTPUT%" EQU "" (
          ECHO "PACKAGE NAME is not defined"
          EXIT 1
        )
        ECHO "BUILD_OUTPUT=%BUILD_OUTPUT%" >> $GITHUB_ENV

        %BUILD_CMD%


    - name: Login
      env:
          ANACONDA_LOGIN: ${{ secrets.ANACONDA_LOGIN }}
          ANACONDA_PASSWORD: ${{ secrets.ANACONDA_PASSWORD }}
      shell: cmd /C CALL {0}
      run: |
        IF "%ANACONDA_LOGIN%" EQU "" (
          echo "ANACONDA_LOGIN is not defined"
          exit -1
        )
        FOR /f %i IN ('uuidgen') DO SET SESSION_UID=%i
        anaconda login --username %ANACONDA_LOGIN% --password %ANACONDA_PASSWORD% --hostname %SESSION_UID%

    - name: Deploy
      env:
          ANACONDA_OWNER: ${{ secrets.ANACONDA_OWNER }}
          BUILD_OUTPUT: ${{ env.BUILD_OUTPUT }}
      shell: cmd /C CALL {0}
      run: |
        if  "%ANACONDA_OWNER%" == "" (
          echo "ANACONDA_OWNER is not defined"
          exit 1
        )

        echo "PACKAGE NAME:" %BUILD_OUTPUT%
        if  "%BUILD_OUTPUT%" == "" (
          echo "PACKAGE NAME is not defined"
          exit 1
        )
        anaconda upload --skip-existing %BUILD_OUTPUT% -u %ANACONDA_OWNER% --no-progress

